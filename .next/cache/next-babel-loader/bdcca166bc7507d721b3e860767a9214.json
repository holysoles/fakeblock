{"ast":null,"code":"import React from \"react\";\nimport fetch from \"node-fetch\";\nimport { Headers } from \"node-fetch\";\nimport GetFBID from \"../GetFBID\";\nexport default async function GetPosts(page) {\n  const jsdom = require(\"jsdom\");\n\n  const {\n    JSDOM\n  } = jsdom;\n  const dom = new JSDOM();\n  const document = dom.window.document;\n  let postsArray = [];\n  const fbID = await GetFBID(page);\n  console.log(\"got id, moving on\");\n  const jsonUrl = 'https://www.facebook.com/pages_reaction_units/more/?'; //timeline cursor appears to set where posts get request starts from\n\n  const timelineCursor = \"%7B%22timeline_cursor%22%3A%22AQHRoDgKgwnQmRz8-7LyXTbs8467llbU4E2FkvBASG8-CkOTDUtCxL2Rbx\" + \"_u0_cGtwwSP-aOXMsTVCNr62TMoNdjl0EmuzWGBCNQrxeyKxMb4hQQMNqhGGJtLN8VYY5vIYUR%22%2C%22timeline_section_cursor%22\" + \"%3Anull%2C%22has_next_page%22%3Atrue%7D\";\n  const params = {\n    'surface': 'www_pages_posts',\n    'unit_count': '4',\n    //sets how many posts to get\n    '__a': '1'\n  };\n  const headers = new Headers({\n    'User-Agent': \"PostmanRuntime/7.24.1\"\n  });\n  const opts = {\n    method: 'GET',\n    headers: headers,\n    redirect: 'follow'\n  };\n  const fullUrl = jsonUrl + 'page_id=' + fbID + \"&cursor=\" + timelineCursor + '&' + new URLSearchParams(params); //fetch(fullUrl, opts).then(response => response.text()).then(rawRes => {})\n\n  const res = await fetch(fullUrl, opts);\n\n  if (res.ok) {\n    console.log(\"response okay\"); //console.log(res)\n    //need to get html updates from json response\n\n    const resText = await res.text();\n    const rawJson = resText.replace(\"for (;;);\", \"\");\n    const postsJson = JSON.parse(rawJson);\n    const rawHtml = postsJson.domops[0][3].__html; //construct doc from raw html string and get post wrapper elements into html collection\n\n    const postsDoc = document.createElement('html');\n    postsDoc.innerHTML = rawHtml; //get posts elements from html doc\n\n    const postWrappers = postsDoc.getElementsByClassName(\"_5pcr userContentWrapper\"); //const postMessages = postsDoc.querySelectorAll(\"div[data-testid='post_message']\");\n\n    console.log(\"how many post containers: \", postWrappers.length);\n\n    for (let i = 0; i < postWrappers.length; i++) {\n      let post = {\n        text: [],\n        img: []\n      };\n      const postImages = postWrappers[i].getElementsByTagName('img');\n      const postParagraphs = postWrappers[i].getElementsByTagName('p'); //if post has paragraphs, iterate over each and push to text array in post object\n\n      for (let j = 0; j < postParagraphs.length; j++) {\n        post.text.push(postParagraphs[j].textContent);\n      } //if post has images, iterate over each and push to image array in post object\n\n\n      if (postImages.length > 0) {\n        for (let k = 0; k < postImages.length; k++) {\n          const image = postImages.item(k);\n          const imagesToIgnore = \"Image may contain: possible text that says 'Shop Now'\";\n\n          if (image.getAttribute('alt') !== imagesToIgnore) {\n            post.img.push(image.getAttribute('src'));\n          }\n        }\n      }\n\n      postsArray.push(post);\n    }\n\n    console.log(\"returning postsArray\");\n    return postsArray;\n  } else {\n    console.log(\"response failed\");\n    return [];\n  }\n}","map":null,"metadata":{},"sourceType":"module"}