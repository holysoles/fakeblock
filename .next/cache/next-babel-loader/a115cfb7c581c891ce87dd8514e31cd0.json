{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Patrick\\\\PhpstormProjects\\\\fakeblock\\\\components\\\\MakeLightbox.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nexport default class MakeLightbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      photoIndex: 0,\n      isOpen: false\n    };\n  }\n\n  render() {\n    const {\n      photoIndex,\n      isOpen\n    } = this.state;\n    let images = this.props.images;\n    images.shift();\n    console.log(images);\n\n    if (images.length === 0) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, __jsx(CardActionArea, {\n      onClick: () => this.setState({\n        isOpen: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, __jsx(CardMedia, {\n      component: \"img\",\n      alt: \"Post Image\",\n      height: \"250\",\n      image: images[0],\n      title: \"Post Image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    })), isOpen && __jsx(Lightbox, {\n      mainSrc: images[photoIndex],\n      nextSrc: images[(photoIndex + 1) % images.length],\n      prevSrc: images[(photoIndex + images.length - 1) % images.length],\n      onCloseRequest: () => this.setState({\n        isOpen: false\n      }),\n      onMovePrevRequest: () => this.setState({\n        photoIndex: (photoIndex + images.length - 1) % images.length\n      }),\n      onMoveNextRequest: () => this.setState({\n        photoIndex: (photoIndex + 1) % images.length\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Patrick/PhpstormProjects/fakeblock/components/MakeLightbox.js"],"names":["React","Component","Lightbox","CardActionArea","CardMedia","MakeLightbox","constructor","props","state","photoIndex","isOpen","render","images","shift","console","log","length","setState"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,eAAe,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAChDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,CADH;AAETC,MAAAA,MAAM,EAAE;AAFC,KAAb;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEF,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAAyB,KAAKF,KAApC;AAEA,QAAII,MAAM,GAAG,KAAKL,KAAL,CAAWK,MAAxB;AACAA,IAAAA,MAAM,CAACC,KAAP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AAEA,QAAGA,MAAM,CAACI,MAAP,KAAkB,CAArB,EAAuB;AACnB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,cAAD;AAAgB,MAAA,OAAO,EAAE,MAAM,KAAKC,QAAL,CAAc;AAAEP,QAAAA,MAAM,EAAE;AAAV,OAAd,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD;AACI,MAAA,SAAS,EAAC,KADd;AAEI,MAAA,GAAG,EAAC,YAFR;AAGI,MAAA,MAAM,EAAC,KAHX;AAII,MAAA,KAAK,EAAEE,MAAM,CAAC,CAAD,CAJjB;AAKI,MAAA,KAAK,EAAC,YALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAWKF,MAAM,IACH,MAAC,QAAD;AACI,MAAA,OAAO,EAAEE,MAAM,CAACH,UAAD,CADnB;AAEI,MAAA,OAAO,EAAEG,MAAM,CAAC,CAACH,UAAU,GAAG,CAAd,IAAmBG,MAAM,CAACI,MAA3B,CAFnB;AAGI,MAAA,OAAO,EAAEJ,MAAM,CAAC,CAACH,UAAU,GAAGG,MAAM,CAACI,MAApB,GAA6B,CAA9B,IAAmCJ,MAAM,CAACI,MAA3C,CAHnB;AAII,MAAA,cAAc,EAAE,MAAM,KAAKC,QAAL,CAAc;AAAEP,QAAAA,MAAM,EAAE;AAAV,OAAd,CAJ1B;AAKI,MAAA,iBAAiB,EAAE,MACf,KAAKO,QAAL,CAAc;AACVR,QAAAA,UAAU,EAAE,CAACA,UAAU,GAAGG,MAAM,CAACI,MAApB,GAA6B,CAA9B,IAAmCJ,MAAM,CAACI;AAD5C,OAAd,CANR;AAUI,MAAA,iBAAiB,EAAE,MACf,KAAKC,QAAL,CAAc;AACVR,QAAAA,UAAU,EAAE,CAACA,UAAU,GAAG,CAAd,IAAmBG,MAAM,CAACI;AAD5B,OAAd,CAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZR,CADJ;AAgCH;;AArD+C","sourcesContent":["import React, { Component } from 'react';\r\nimport Lightbox from 'react-image-lightbox';\r\n\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\n\r\nexport default class MakeLightbox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            photoIndex: 0,\r\n            isOpen: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { photoIndex, isOpen } = this.state;\r\n\r\n        let images = this.props.images;\r\n        images.shift();\r\n        console.log(images);\r\n\r\n        if(images.length === 0){\r\n            return <div/>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <CardActionArea onClick={() => this.setState({ isOpen: true })}>\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        alt=\"Post Image\"\r\n                        height=\"250\"\r\n                        image={images[0]}\r\n                        title=\"Post Image\"\r\n                    />\r\n                </CardActionArea>\r\n\r\n                {isOpen && (\r\n                    <Lightbox\r\n                        mainSrc={images[photoIndex]}\r\n                        nextSrc={images[(photoIndex + 1) % images.length]}\r\n                        prevSrc={images[(photoIndex + images.length - 1) % images.length]}\r\n                        onCloseRequest={() => this.setState({ isOpen: false })}\r\n                        onMovePrevRequest={() =>\r\n                            this.setState({\r\n                                photoIndex: (photoIndex + images.length - 1) % images.length,\r\n                            })\r\n                        }\r\n                        onMoveNextRequest={() =>\r\n                            this.setState({\r\n                                photoIndex: (photoIndex + 1) % images.length,\r\n                            })\r\n                        }\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}