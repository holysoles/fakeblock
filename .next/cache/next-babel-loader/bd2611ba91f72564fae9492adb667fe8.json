{"ast":null,"code":"import axios from 'axios';\nimport React from \"react\";\nimport fetch from \"node-fetch\";\nimport { Headers } from \"node-fetch\";\nexport default async function GetPosts(page) {\n  const jsdom = require(\"jsdom\");\n\n  const {\n    JSDOM\n  } = jsdom;\n  const dom = new JSDOM();\n  const document = dom.window.document;\n  let postsArray = []; //get facebook id\n\n  const fbID = '211313118876';\n  const jsonUrl = 'https://www.facebook.com/pages_reaction_units/more/?'; //timeline cursor appears to set where posts get request starts from\n\n  const timelineCursor = \"%7B%22timeline_cursor%22%3A%22AQHRoDgKgwnQmRz8-7LyXTbs8467llbU4E2FkvBASG8-CkOTDUtCxL2Rbx\" + \"_u0_cGtwwSP-aOXMsTVCNr62TMoNdjl0EmuzWGBCNQrxeyKxMb4hQQMNqhGGJtLN8VYY5vIYUR%22%2C%22timeline_section_cursor%22\" + \"%3Anull%2C%22has_next_page%22%3Atrue%7D\";\n  const params = {\n    'surface': 'www_pages_posts',\n    'unit_count': '4',\n    //sets how many posts to get\n    '__a': '1'\n  };\n  const headers = new Headers({\n    'User-Agent': \"PostmanRuntime/7.24.1\"\n  });\n  const opts = {\n    method: 'GET',\n    headers: headers,\n    redirect: 'follow'\n  };\n  const fullUrl = jsonUrl + 'page_id=' + fbID + \"&cursor=\" + timelineCursor + '&' + new URLSearchParams(params); //fetch(fullUrl, opts).then(response => response.text()).then(rawRes => {})\n\n  const res = await fetch(fullUrl, opts);\n\n  if (res.ok) {\n    console.log(\"response okay\"); //console.log(res)\n    //need to get html updates from json response\n\n    const resText = await res.text();\n    const rawJson = resText.replace(\"for (;;);\", \"\");\n    const postsJson = JSON.parse(rawJson);\n    const rawHtml = postsJson.domops[0][3].__html; //construct doc from raw html string and get post wrapper elements into html collection\n\n    const postsDoc = document.createElement('html');\n    postsDoc.innerHTML = rawHtml; //get posts elements from html doc\n\n    const postWrappers = postsDoc.getElementsByClassName(\"_5pcr userContentWrapper\");\n    let post = {\n      text: [],\n      img: ''\n    };\n\n    for (let i = 0; i < postWrappers.length; i++) {\n      const postImages = postsDoc.getElementsByTagName('scaledImageFitHeight');\n      console.log(postImages);\n      const postMessages = postsDoc.querySelectorAll(\"div[data-testid='post_message']\");\n      const postParagraphs = postMessages[i].getElementsByTagName('p');\n      console.log(postParagraphs);\n\n      for (let j = 0; j < postParagraphs.length; j++) {\n        post.text.push(postMessages[i].textContent);\n      }\n\n      if (postImages[i]) {\n        console.log(\"images: \", postImages[i]);\n        post.img = postImages[i].getAttribute('src');\n      }\n\n      postsArray.push(post);\n      console.log(post);\n    }\n  } else {\n    console.log(\"response failed\");\n  }\n\n  if (postsArray.length > 0) {\n    console.log(\"returning postsArray\"); //console.log(postsArray[0].text);\n    //console.log(postsArray[1].text);\n\n    return postsArray;\n  } else {\n    return [];\n  }\n}","map":{"version":3,"sources":["C:/Users/Patrick/PhpstormProjects/fakeblock/components/Business/GetPosts.js"],"names":["axios","React","fetch","Headers","GetPosts","page","jsdom","require","JSDOM","dom","document","window","postsArray","fbID","jsonUrl","timelineCursor","params","headers","opts","method","redirect","fullUrl","URLSearchParams","res","ok","console","log","resText","text","rawJson","replace","postsJson","JSON","parse","rawHtml","domops","__html","postsDoc","createElement","innerHTML","postWrappers","getElementsByClassName","post","img","i","length","postImages","getElementsByTagName","postMessages","querySelectorAll","postParagraphs","j","push","textContent","getAttribute"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React from \"react\";\r\nimport fetch from \"node-fetch\"\r\nimport {Headers} from \"node-fetch\";\r\n\r\nexport default async function GetPosts(page){\r\n    const jsdom = require(\"jsdom\");\r\n    const { JSDOM } = jsdom;\r\n    const dom = new JSDOM();\r\n    const document = dom.window.document;\r\n\r\n    let postsArray = [];\r\n    //get facebook id\r\n    const fbID = '211313118876';\r\n\r\n    const jsonUrl = 'https://www.facebook.com/pages_reaction_units/more/?';\r\n    //timeline cursor appears to set where posts get request starts from\r\n    const timelineCursor = \"%7B%22timeline_cursor%22%3A%22AQHRoDgKgwnQmRz8-7LyXTbs8467llbU4E2FkvBASG8-CkOTDUtCxL2Rbx\" +\r\n        \"_u0_cGtwwSP-aOXMsTVCNr62TMoNdjl0EmuzWGBCNQrxeyKxMb4hQQMNqhGGJtLN8VYY5vIYUR%22%2C%22timeline_section_cursor%22\" +\r\n        \"%3Anull%2C%22has_next_page%22%3Atrue%7D\";\r\n    const params = {\r\n        'surface': 'www_pages_posts',\r\n        'unit_count': '4', //sets how many posts to get\r\n        '__a': '1'\r\n    };\r\n    const headers = new Headers({'User-Agent': \"PostmanRuntime/7.24.1\"});\r\n    const opts = {\r\n        method: 'GET',\r\n        headers: headers,\r\n        redirect: 'follow',\r\n    };\r\n    const fullUrl = jsonUrl +'page_id='+ fbID +\"&cursor=\"+ timelineCursor +'&'+ new URLSearchParams(params);\r\n    //fetch(fullUrl, opts).then(response => response.text()).then(rawRes => {})\r\n\r\n    const res = await fetch(fullUrl,opts);\r\n    if(res.ok){\r\n        console.log(\"response okay\")\r\n        //console.log(res)\r\n        //need to get html updates from json response\r\n        const resText = await res.text();\r\n        const rawJson = resText.replace(\"for (;;);\",\"\");\r\n        const postsJson = JSON.parse(rawJson);\r\n        const rawHtml = postsJson.domops[0][3].__html;\r\n        //construct doc from raw html string and get post wrapper elements into html collection\r\n        const postsDoc = document.createElement( 'html' );\r\n        postsDoc.innerHTML = rawHtml;\r\n        //get posts elements from html doc\r\n        const postWrappers = postsDoc.getElementsByClassName(\"_5pcr userContentWrapper\");\r\n\r\n        let post = {text:[], img: ''};\r\n\r\n        for(let i = 0; i < postWrappers.length; i++) {\r\n            const postImages = postsDoc.getElementsByTagName('scaledImageFitHeight');\r\n            console.log(postImages)\r\n            const postMessages = postsDoc.querySelectorAll(\"div[data-testid='post_message']\");\r\n            const postParagraphs = postMessages[i].getElementsByTagName( 'p');\r\n\r\n\r\n            console.log(postParagraphs)\r\n            for(let j=0; j < postParagraphs.length; j++){\r\n                post.text.push(postMessages[i].textContent);\r\n            }\r\n            if(postImages[i]){\r\n                console.log(\"images: \",postImages[i]);\r\n                post.img = postImages[i].getAttribute('src');\r\n            }\r\n            postsArray.push(post);\r\n            console.log(post)\r\n        }\r\n    }\r\n    else{\r\n        console.log(\"response failed\")\r\n    }\r\n\r\n\r\n    if(postsArray.length > 0) {\r\n        console.log(\"returning postsArray\");\r\n        //console.log(postsArray[0].text);\r\n        //console.log(postsArray[1].text);\r\n        return postsArray\r\n    }\r\n    else{\r\n        return []\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}