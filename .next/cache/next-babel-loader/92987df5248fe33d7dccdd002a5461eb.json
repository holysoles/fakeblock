{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Patrick\\\\PhpstormProjects\\\\fakeblock\\\\pages\\\\[page]\\\\videos.js\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport HeaderBar from \"../../components/nav/HeaderBar\"; //import { Typography } from \"@material-ui/core/Typography\";\n\nimport MakeVideoPlayer from \"../../components/Posts/MakeVideoPlayer\";\nimport GetVideos from \"../../components/Videos/GetVideos\";\nimport GetTrueVideoSource from \"../../components/Posts/GetTrueVideoSource\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nexport async function getServerSideProps(context) {\n  let page = context.query.page;\n  let videoArray = await GetVideos(page);\n  const videos = await Promise.all(videoArray.map(async videoPost => {\n    console.log(videoPost);\n    const url = videoPost.node.url;\n    const trueUrl = await GetTrueVideoSource(url);\n    const timestamp = videoPost.node['post_time'];\n    const plays = videoPost.node['play_count'];\n    const videoObj = {\n      url: trueUrl,\n      shareUrl: url,\n      timestamp: timestamp,\n      playcount: plays\n    };\n    return trueUrl;\n  }));\n  console.log(videos);\n  return {\n    props: {\n      videos\n    }\n  };\n}\n\nconst Page = ({\n  videos\n}) => {\n  const router = useRouter();\n  const videoList = videos.map(url => {\n    return __jsx(Card, {\n      key: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, __jsx(MakeVideoPlayer, {\n      source: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }), __jsx(CardActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      size: \"small\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, \"Share\"), __jsx(Button, {\n      size: \"small\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, \"Likes\")));\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(HeaderBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"pagetitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    align: \"center\",\n    variant: 'h4',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, router.query.page, \"'s Videos\")), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, videoList)));\n};\n\nexport default Page;","map":{"version":3,"sources":["C:/Users/Patrick/PhpstormProjects/fakeblock/pages/[page]/videos.js"],"names":["useRouter","React","HeaderBar","MakeVideoPlayer","GetVideos","GetTrueVideoSource","Card","CardContent","Typography","CardActions","Button","getServerSideProps","context","page","query","videoArray","videos","Promise","all","map","videoPost","console","log","url","node","trueUrl","timestamp","plays","videoObj","shareUrl","playcount","props","Page","router","videoList"],"mappings":"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","sourcesContent":["import {useRouter} from \"next/router\";\r\nimport React from \"react\";\r\nimport HeaderBar from \"../../components/nav/HeaderBar\";\r\n//import { Typography } from \"@material-ui/core/Typography\";\r\nimport MakeVideoPlayer from \"../../components/Posts/MakeVideoPlayer\";\r\nimport GetVideos from \"../../components/Videos/GetVideos\";\r\nimport GetTrueVideoSource from \"../../components/Posts/GetTrueVideoSource\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport async function getServerSideProps(context){\r\n    let page = context.query.page;\r\n    let videoArray = await GetVideos(page);\r\n    const videos = await Promise.all(videoArray.map( async (videoPost)=>{\r\n        console.log(videoPost)\r\n        const url = videoPost.node.url;\r\n        const trueUrl = await GetTrueVideoSource(url);\r\n        const timestamp = videoPost.node['post_time'];\r\n        const plays = videoPost.node['play_count']\r\n\r\n        const videoObj = {url: trueUrl, shareUrl: url, timestamp: timestamp, playcount: plays};\r\n        return trueUrl\r\n    }));\r\n    console.log(videos);\r\n    return{props: {videos}}\r\n}\r\n\r\nconst Page = ({videos}) => {\r\n    const router = useRouter();\r\n\r\n\r\n    const videoList = videos.map((url)=>{\r\n        return (\r\n        <Card key={url}>\r\n            <MakeVideoPlayer source={url} />\r\n            <CardActions>\r\n                <Button size=\"small\" color=\"primary\">\r\n                    Share\r\n                </Button>\r\n                <Button size=\"small\" color=\"primary\">\r\n                    Likes\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <HeaderBar/>\r\n            <div>\r\n                <div className='pagetitle'>\r\n                    <p align='center' variant={'h4'}>{router.query.page}'s Videos</p>\r\n                </div>\r\n                <ul>\r\n                    {videoList}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Page;"]},"metadata":{},"sourceType":"module"}