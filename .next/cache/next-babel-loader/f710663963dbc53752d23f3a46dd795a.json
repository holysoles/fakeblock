{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport InfoIcon from '@material-ui/icons/Info';\nimport Link from \"next/link\";\nvar useStyles = makeStyles({\n  list: {\n    width: 200\n  },\n  fullList: {\n    width: 'auto'\n  }\n});\nexport default function DrawerMenu() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var toggleDrawer = function toggleDrawer(anchor, open) {\n    return function (event) {\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n        return;\n      }\n\n      setState(_objectSpread({}, state, _defineProperty({}, anchor, open)));\n    };\n  };\n\n  var list = function list(anchor) {\n    return __jsx(\"div\", {\n      className: clsx(classes.list, _defineProperty({}, classes.fullList, anchor === 'top' || anchor === 'bottom')),\n      role: \"presentation\",\n      onClick: toggleDrawer(anchor, false),\n      onKeyDown: toggleDrawer(anchor, false)\n    }, __jsx(List, null, ['Home', 'About'].map(function (text, index) {\n      return __jsx(Link, {\n        href: text === 'Home' ? '/' : '/' + text,\n        key: text\n      }, __jsx(ListItem, {\n        button: true\n      }, __jsx(ListItemIcon, null, index % 2 === 0 ? __jsx(HomeIcon, null) : __jsx(InfoIcon, null)), __jsx(ListItemText, {\n        primary: text\n      })));\n    }), __jsx(Divider, null)));\n  };\n\n  var anchor = 'left';\n  return __jsx(\"div\", null, __jsx(React.Fragment, {\n    key: anchor\n  }, __jsx(IconButton, {\n    onClick: toggleDrawer(anchor, true),\n    edge: \"start\",\n    className: classes.menuButton,\n    color: \"inherit\",\n    \"aria-label\": \"menu\"\n  }, __jsx(MenuIcon, null)), __jsx(Drawer, {\n    anchor: anchor,\n    open: state[anchor],\n    onClose: toggleDrawer(anchor, false)\n  }, list(anchor))));\n}","map":null,"metadata":{},"sourceType":"module"}