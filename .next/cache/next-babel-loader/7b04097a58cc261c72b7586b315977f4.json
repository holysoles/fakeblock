{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Patrick\\\\PhpstormProjects\\\\fakeblock\\\\components\\\\MakePosts.js\";\nvar __jsx = React.createElement;\nimport MakeAvatar from \"./MakeAvatar\";\nimport React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport MakeLightbox from \"./MakeLightbox\";\nvar useStyles = makeStyles({\n  root: {\n    maxWidth: 750\n  }\n});\n\nfunction openLightbox() {\n  console.log('clicked');\n}\n\nexport default function MakePosts(postsArray) {\n  var _this = this;\n\n  var classes = useStyles();\n  var postsList = postsArray.map(function (post) {\n    var Avatar = MakeAvatar('/');\n    var paragraphs = post.text.map(function (paragraph) {\n      return __jsx(Typography, {\n        variant: \"body2\",\n        component: \"p\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }, paragraph);\n    });\n    var images = post.img.map(function (source) {\n      if (source.includes('p50x50')) {\n        Avatar = MakeAvatar(source);\n      } else {\n        //console.log(source)\n        return source;\n      }\n    });\n    return __jsx(Card, {\n      className: classes.root,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, __jsx(MakeLightbox, {\n      images: images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }), __jsx(CardContent, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, Avatar), __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, __jsx(Typography, {\n      gutterBottom: true,\n      variant: \"h6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }, post.user))), __jsx(Typography, {\n      gutterBottom: true,\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, post.timestamp), paragraphs), __jsx(CardActions, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, __jsx(Button, {\n      size: \"small\",\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, \"Share\"), __jsx(Button, {\n      size: \"small\",\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, \"Likes\")));\n  });\n  return postsList;\n}","map":{"version":3,"sources":["C:/Users/Patrick/PhpstormProjects/fakeblock/components/MakePosts.js"],"names":["MakeAvatar","React","Card","CardContent","Typography","CardActions","Button","makeStyles","MakeLightbox","useStyles","root","maxWidth","openLightbox","console","log","MakePosts","postsArray","classes","postsList","map","post","Avatar","paragraphs","text","paragraph","images","img","source","includes","user","timestamp"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,IAAMC,SAAS,GAAGF,UAAU,CAAC;AACzBG,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR;AADmB,CAAD,CAA5B;;AAMA,SAASC,YAAT,GAAuB;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACF;;AAED,eAAe,SAASC,SAAT,CAAmBC,UAAnB,EAA+B;AAAA;;AAC1C,MAAMC,OAAO,GAAGR,SAAS,EAAzB;AAEA,MAAMS,SAAS,GAAGF,UAAU,CAACG,GAAX,CAAe,UAACC,IAAD,EAAU;AACvC,QAAIC,MAAM,GAAGrB,UAAU,CAAC,GAAD,CAAvB;AACA,QAAMsB,UAAU,GAAGF,IAAI,CAACG,IAAL,CAAUJ,GAAV,CAAc,UAACK,SAAD,EAAe;AAC5C,aACI,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAA4B,QAAA,SAAS,EAAC,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,SADL,CADJ;AAKH,KANkB,CAAnB;AAOA,QAAMC,MAAM,GAAGL,IAAI,CAACM,GAAL,CAASP,GAAT,CAAa,UAACQ,MAAD,EAAY;AACpC,UAAIA,MAAM,CAACC,QAAP,CAAgB,QAAhB,CAAJ,EAA+B;AAC3BP,QAAAA,MAAM,GAAGrB,UAAU,CAAC2B,MAAD,CAAnB;AACH,OAFD,MAGK;AACD;AACA,eAAOA,MAAP;AACH;AACJ,KARc,CAAf;AAUA,WACI,MAAC,IAAD;AAAM,MAAA,SAAS,EAAEV,OAAO,CAACP,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,YAAD;AAAc,MAAA,MAAM,EAAEe,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKJ,MADL,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,UAAD;AAAY,MAAA,YAAY,MAAxB;AAAyB,MAAA,OAAO,EAAC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,IAAI,CAACS,IADV,CADJ,CAJJ,CADJ,EAWI,MAAC,UAAD;AAAY,MAAA,YAAY,MAAxB;AAAyB,MAAA,OAAO,EAAC,OAAjC;AAAyC,MAAA,KAAK,EAAC,eAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKT,IAAI,CAACU,SADV,CAXJ,EAcKR,UAdL,CAFJ,EAkBI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,KAAK,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAII,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,KAAK,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,CAlBJ,CADJ;AA6BH,GAhDiB,CAAlB;AAiDA,SAAOJ,SAAP;AACH","sourcesContent":["import MakeAvatar from \"./MakeAvatar\";\r\nimport React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MakeLightbox from \"./MakeLightbox\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 750,\r\n    },\r\n});\r\n\r\nfunction openLightbox(){\r\n   console.log('clicked')\r\n}\r\n\r\nexport default function MakePosts(postsArray) {\r\n    const classes = useStyles();\r\n\r\n    const postsList = postsArray.map((post) => {\r\n        let Avatar = MakeAvatar('/');\r\n        const paragraphs = post.text.map((paragraph) => {\r\n            return (\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                    {paragraph}\r\n                </Typography>\r\n            )\r\n        });\r\n        const images = post.img.map((source) => {\r\n            if (source.includes('p50x50')) {\r\n                Avatar = MakeAvatar(source)\r\n            }\r\n            else {\r\n                //console.log(source)\r\n                return source\r\n            }\r\n        });\r\n\r\n        return (\r\n            <Card className={classes.root}>\r\n                <MakeLightbox images={images}/>\r\n                <CardContent>\r\n                    <p>\r\n                        <span>\r\n                            {Avatar}\r\n                        </span>\r\n                        <span>\r\n                            <Typography gutterBottom variant=\"h6\">\r\n                                {post.user}\r\n                            </Typography>\r\n                        </span>\r\n                    </p>\r\n                    <Typography gutterBottom variant=\"body2\" color=\"textSecondary\">\r\n                        {post.timestamp}\r\n                    </Typography>\r\n                    {paragraphs}\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                        Share\r\n                    </Button>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                        Likes\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        )\r\n    })\r\n    return postsList\r\n}\r\n"]},"metadata":{},"sourceType":"module"}