{"ast":null,"code":"import axios from 'axios';\nimport React from \"react\";\nimport fetch from \"node-fetch\";\nexport default async function GetPosts(page) {\n  const pageurl = 'https://www.facebook.com/' + page + '/posts';\n  const res = await axios.get(pageurl);\n\n  const jsdom = require(\"jsdom\");\n\n  const {\n    JSDOM\n  } = jsdom;\n  const dom = new JSDOM(res.data);\n  const document = dom.window.document;\n  const container = document.getElementById(\"content_container\"); //get facebook id\n\n  const fbID = '211313118876';\n  const jsonUrl = 'https://www.facebook.com/pages_reaction_units/more/?'; //timeline cursor appears to set where posts get request starts frmom\n\n  const timelineCursor = \"%7B%22timeline_cursor%22%3A%22AQHRoDgKgwnQmRz8-7LyXTbs8467llbU4E2FkvBASG8-CkOTDUtCxL2Rbx\" + \"_u0_cGtwwSP-aOXMsTVCNr62TMoNdjl0EmuzWGBCNQrxeyKxMb4hQQMNqhGGJtLN8VYY5vIYUR%22%2C%22timeline_section_cursor%22\" + \"%3Anull%2C%22has_next_page%22%3Atrue%7D\";\n  const firstParams = 'page_id=' + fbID + \"&cursor=\" + timelineCursor + '&';\n  const params = {\n    'surface': 'www_pages_posts',\n    'unit_count': '4',\n    //sets how many posts to get\n    '__a': '1'\n  };\n  var opts = {\n    method: 'GET',\n    redirect: 'follow'\n  };\n  const fullUrl = jsonUrl + firstParams + new URLSearchParams(params);\n  fetch(fullUrl, opts).then(response => response.text()).then(rawRes => {\n    //need to get html updates from json response\n    const rawJson = rawRes.replace(\"for (;;);\", \"\");\n    const postsJson = JSON.parse(rawJson);\n    const rawHtml = postsJson.domops[0][3].__html; //construct dom from rawhtml\n\n    const postsDom = new JSDOM(rawHtml);\n    const postsDoc = postsDom.window.document;\n    let postWrappers = postsDoc.getElementsByClassName(\"userContentWrapper\");\n    console.log(postWrappers.childNodes);\n  });\n  const postArray = [];\n\n  if (document) {\n    for (const post in postArray) {//console.log(post)\n    }\n\n    return [];\n  } else {\n    return [];\n  }\n}","map":{"version":3,"sources":["C:/Users/Patrick/PhpstormProjects/fakeblock/components/Business/GetPosts.js"],"names":["axios","React","fetch","GetPosts","page","pageurl","res","get","jsdom","require","JSDOM","dom","data","document","window","container","getElementById","fbID","jsonUrl","timelineCursor","firstParams","params","opts","method","redirect","fullUrl","URLSearchParams","then","response","text","rawRes","rawJson","replace","postsJson","JSON","parse","rawHtml","domops","__html","postsDom","postsDoc","postWrappers","getElementsByClassName","console","log","childNodes","postArray","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,eAAe,eAAeC,QAAf,CAAwBC,IAAxB,EAA6B;AAExC,QAAMC,OAAO,GAAG,8BAA8BD,IAA9B,GAAqC,QAArD;AACA,QAAME,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUF,OAAV,CAAlB;;AACA,QAAMG,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYF,KAAlB;AACA,QAAMG,GAAG,GAAG,IAAID,KAAJ,CAAUJ,GAAG,CAACM,IAAd,CAAZ;AACA,QAAMC,QAAQ,GAAGF,GAAG,CAACG,MAAJ,CAAWD,QAA5B;AACA,QAAME,SAAS,GAAGF,QAAQ,CAACG,cAAT,CAAwB,mBAAxB,CAAlB,CARwC,CASxC;;AACA,QAAMC,IAAI,GAAG,cAAb;AAEA,QAAMC,OAAO,GAAG,sDAAhB,CAZwC,CAaxC;;AACA,QAAMC,cAAc,GAAG,6FACnB,+GADmB,GAEnB,yCAFJ;AAGA,QAAMC,WAAW,GAAG,aAAWH,IAAX,GAAgB,UAAhB,GAA4BE,cAA5B,GAA4C,GAAhE;AACA,QAAME,MAAM,GAAG;AACX,eAAW,iBADA;AAEX,kBAAc,GAFH;AAEQ;AACnB,WAAO;AAHI,GAAf;AAMA,MAAIC,IAAI,GAAG;AACPC,IAAAA,MAAM,EAAE,KADD;AAEPC,IAAAA,QAAQ,EAAE;AAFH,GAAX;AAKA,QAAMC,OAAO,GAAGP,OAAO,GAAGE,WAAV,GAAwB,IAAIM,eAAJ,CAAoBL,MAApB,CAAxC;AACAnB,EAAAA,KAAK,CAACuB,OAAD,EAAUH,IAAV,CAAL,CAAqBK,IAArB,CAA0BC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAAtC,EAAuDF,IAAvD,CAA4DG,MAAM,IAAI;AAClE;AACA,UAAMC,OAAO,GAAGD,MAAM,CAACE,OAAP,CAAe,WAAf,EAA2B,EAA3B,CAAhB;AACA,UAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAAlB;AACA,UAAMK,OAAO,GAAGH,SAAS,CAACI,MAAV,CAAiB,CAAjB,EAAoB,CAApB,EAAuBC,MAAvC,CAJkE,CAKlE;;AACA,UAAMC,QAAQ,GAAG,IAAI7B,KAAJ,CAAU0B,OAAV,CAAjB;AACA,UAAMI,QAAQ,GAAGD,QAAQ,CAACzB,MAAT,CAAgBD,QAAjC;AACA,QAAI4B,YAAY,GAAGD,QAAQ,CAACE,sBAAT,CAAgC,oBAAhC,CAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,YAAY,CAACI,UAAzB;AAGC,GAZL;AAaA,QAAMC,SAAS,GAAG,EAAlB;;AACA,MAAGjC,QAAH,EAAa;AACT,SAAK,MAAMkC,IAAX,IAAmBD,SAAnB,EAA8B,CAC1B;AACH;;AACD,WAAO,EAAP;AACH,GALD,MAMI;AACA,WAAO,EAAP;AACH;AACJ","sourcesContent":["import axios from 'axios';\r\nimport React from \"react\";\r\nimport fetch from \"node-fetch\";\r\n\r\nexport default async function GetPosts(page){\r\n\r\n    const pageurl = 'https://www.facebook.com/' + page + '/posts';\r\n    const res = await axios.get(pageurl);\r\n    const jsdom = require(\"jsdom\");\r\n    const { JSDOM } = jsdom;\r\n    const dom = new JSDOM(res.data);\r\n    const document = dom.window.document;\r\n    const container = document.getElementById(\"content_container\");\r\n    //get facebook id\r\n    const fbID = '211313118876';\r\n\r\n    const jsonUrl = 'https://www.facebook.com/pages_reaction_units/more/?';\r\n    //timeline cursor appears to set where posts get request starts frmom\r\n    const timelineCursor = \"%7B%22timeline_cursor%22%3A%22AQHRoDgKgwnQmRz8-7LyXTbs8467llbU4E2FkvBASG8-CkOTDUtCxL2Rbx\" +\r\n        \"_u0_cGtwwSP-aOXMsTVCNr62TMoNdjl0EmuzWGBCNQrxeyKxMb4hQQMNqhGGJtLN8VYY5vIYUR%22%2C%22timeline_section_cursor%22\" +\r\n        \"%3Anull%2C%22has_next_page%22%3Atrue%7D\";\r\n    const firstParams = 'page_id='+fbID+\"&cursor=\"+ timelineCursor +'&';\r\n    const params = {\r\n        'surface': 'www_pages_posts',\r\n        'unit_count': '4', //sets how many posts to get\r\n        '__a': '1'\r\n    };\r\n\r\n    var opts = {\r\n        method: 'GET',\r\n        redirect: 'follow'\r\n    };\r\n\r\n    const fullUrl = jsonUrl + firstParams + new URLSearchParams(params);\r\n    fetch(fullUrl, opts).then(response => response.text()).then(rawRes => {\r\n        //need to get html updates from json response\r\n        const rawJson = rawRes.replace(\"for (;;);\",\"\");\r\n        const postsJson = JSON.parse(rawJson);\r\n        const rawHtml = postsJson.domops[0][3].__html;\r\n        //construct dom from rawhtml\r\n        const postsDom = new JSDOM(rawHtml);\r\n        const postsDoc = postsDom.window.document;\r\n        let postWrappers = postsDoc.getElementsByClassName(\"userContentWrapper\");\r\n        console.log(postWrappers.childNodes);\r\n\r\n\r\n        });\r\n    const postArray = [];\r\n    if(document) {\r\n        for (const post in postArray) {\r\n            //console.log(post)\r\n        }\r\n        return []\r\n    }\r\n    else{\r\n        return []\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}