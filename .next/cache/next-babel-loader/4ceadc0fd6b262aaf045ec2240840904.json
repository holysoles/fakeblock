{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Patrick\\\\PhpstormProjects\\\\fakeblock\\\\pages\\\\fb\\\\public\\\\[search].js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Header from \"../../../components/Header\"; //import fetch from 'node-fetch'\n\nvar Page = function Page(_ref) {\n  var results = _ref.results;\n  var router = useRouter(); //iterate through array of result objects to make list\n\n  var resultsList = results.map(function (result) {\n    var resultName = result[0].value;\n    var resultLink = result[6].value;\n    var resultImage = 'N/A';\n    return __jsx(\"li\", {\n      key: resultLink,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      href: resultLink,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, resultName));\n  });\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Search Results:\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, resultsList)));\n};\n\nexport var __N_SSP = true;\nexport default Page;","map":{"version":3,"sources":["C:/Users/Patrick/PhpstormProjects/fakeblock/pages/fb/public/[search].js"],"names":["React","useRouter","Header","Page","results","router","resultsList","map","result","resultName","value","resultLink","resultImage"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,4BAAnB,C,CACA;;AA+CA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAe;AAAA,MAAbC,OAAa,QAAbA,OAAa;AACxB,MAAMC,MAAM,GAAGJ,SAAS,EAAxB,CADwB,CAGxB;;AACA,MAAMK,WAAW,GAAGF,OAAO,CAACG,GAAR,CAAY,UAACC,MAAD,EAAY;AACxC,QAAIC,UAAU,GAAGD,MAAM,CAAC,CAAD,CAAN,CAAUE,KAA3B;AACA,QAAIC,UAAU,GAAGH,MAAM,CAAC,CAAD,CAAN,CAAUE,KAA3B;AACA,QAAIE,WAAW,GAAG,KAAlB;AACA,WACI;AAAI,MAAA,GAAG,EAAED,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,IAAI,EAAEA,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBF,UAAtB,CADJ,CADJ;AAKH,GATmB,CAApB;AAWA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,WADL,CAFJ,CAFJ,CADJ;AAWH,CA1BD;;;AA4BA,eAAeH,IAAf","sourcesContent":["import React from 'react'\r\nimport { useRouter } from 'next/router';\r\nimport Header from \"../../../components/Header\";\r\n//import fetch from 'node-fetch'\r\nimport axios from 'axios'\r\n\r\nexport async function getServerSideProps() {\r\n    //make and await axios request on public search page\r\n    let query = \"Patrick\";\r\n    if(query === undefined){\r\n        return\r\n    }\r\n    console.log(\"searchquery: \",query)\r\n    const searchUrl = 'https://www.facebook.com/public/'+ query;\r\n\r\n    let header = {\r\n        'Access-Control-Allow-Origin':'*',\r\n        'Content-Type': 'multipart/form-data'\r\n    };\r\n\r\n    let res = await axios.get(searchUrl);\r\n        let htmlText = await res.data;\r\n        //Need parser import for server side rendering\r\n        var DomParser = require('dom-parser');\r\n        var parser = new DomParser();\r\n        var dom = parser.parseFromString(htmlText);\r\n\r\n        if(dom !== null){\r\n            //Results list is hidden element on Dom as string (lazy loading?) need to parse\r\n            var hiddenElements = dom.getElementsByClassName('hidden_elem');\r\n            var listText1 = hiddenElements[1].childNodes[0].childNodes[1].innerHTML;\r\n            var listText2 = hiddenElements[4].childNodes[0].childNodes[1].innerHTML;\r\n            var resultsContainer1 = parser.parseFromString(listText1);\r\n            var resultsContainer2 = parser.parseFromString(listText2);\r\n            let resultsArray1 = resultsContainer1.getElementsByClassName(\"_4bl7 _3-90\");\r\n            let resultsArray2 = resultsContainer2.getElementsByClassName(\"_4bl7 _3-90\");\r\n            let resultsArray = resultsArray1.concat(resultsArray2);\r\n            let results = [];\r\n            for(const result of resultsArray){\r\n                results.push(result.childNodes[0].attributes);\r\n                let imgs = result.childNodes[0].childNodes[0].attributes[2].value;\r\n                console.log(imgs)\r\n\r\n            }\r\n            return{props: {results}}\r\n        }\r\n}\r\n\r\n\r\n\r\nconst Page = ({results}) => {\r\n    const router = useRouter();\r\n\r\n    //iterate through array of result objects to make list\r\n    const resultsList = results.map((result) => {\r\n        let resultName = result[0].value;\r\n        let resultLink = result[6].value;\r\n        let resultImage = 'N/A'\r\n        return(\r\n            <li key={resultLink}>\r\n                <a href={resultLink}>{resultName}</a>\r\n            </li>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div>\r\n                <div>Search Results:</div>\r\n                <ul>\r\n                    {resultsList}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Page;"]},"metadata":{},"sourceType":"module"}