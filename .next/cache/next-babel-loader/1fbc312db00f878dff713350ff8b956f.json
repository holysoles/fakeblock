{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport fetch from \"node-fetch\";\nimport { Headers } from \"node-fetch\";\nimport GetFBID from \"../GetFBID\";\nexport default function GetPhotos(page) {\n  var photoArray, fullUrl, res;\n  return _regeneratorRuntime.async(function GetPhotos$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          photoArray = []; //const fbID = await GetFBID(page);\n\n          fullUrl = 'https://www.facebook/com/' + fbID + '/photos';\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(fullUrl, opts));\n\n        case 4:\n          res = _context.sent;\n\n          if (!res.ok) {\n            _context.next = 10;\n            break;\n          }\n\n          console.log(\"response okay\"); //console.log(res.text());\n          //need to get html updates from json response\n          //const resText = await res.text();\n          //construct doc from raw html string and get post wrapper elements into html collection\n          //const postsDoc = document.createElement('html');\n\n          return _context.abrupt(\"return\", photoArray);\n\n        case 10:\n          console.log(\"response failed\");\n          return _context.abrupt(\"return\", []);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":null,"metadata":{},"sourceType":"module"}