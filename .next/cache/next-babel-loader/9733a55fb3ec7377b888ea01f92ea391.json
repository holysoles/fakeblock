{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport fetch from \"node-fetch\";\nexport default function GetTrueVideoSource(videoUrl) {\n  var requestOptions, res, resText, videoSource;\n  return _regeneratorRuntime.async(function GetTrueVideoSource$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          //fetch video page\n          requestOptions = {\n            method: 'GET',\n            redirect: 'follow'\n          };\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(videoUrl, requestOptions));\n\n        case 3:\n          res = _context.sent;\n          console.log('fetching');\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(res.text());\n\n        case 7:\n          resText = _context.sent;\n          console.log('fetching');\n          videoSource = resText.split(\"video:[{url:\\\"\")[1].split(\"\\\",start:0\")[0];\n          console.log(\"second source: \", videoSource);\n          return _context.abrupt(\"return\", videoSource);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["C:/Users/Patrick/PhpstormProjects/fakeblock/components/Posts/GetTrueVideoSource.js"],"names":["fetch","GetTrueVideoSource","videoUrl","requestOptions","method","redirect","res","console","log","text","resText","videoSource","split"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,YAAlB;AAEA,eAAe,SAAeC,kBAAf,CAAkCC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAEX;AACIC,UAAAA,cAHO,GAGU;AACjBC,YAAAA,MAAM,EAAE,KADS;AAEjBC,YAAAA,QAAQ,EAAE;AAFO,WAHV;AAAA;AAAA,2CAUOL,KAAK,CAACE,QAAD,EAAWC,cAAX,CAVZ;;AAAA;AAULG,UAAAA,GAVK;AAWXC,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAXW;AAAA,2CAYWF,GAAG,CAACG,IAAJ,EAZX;;AAAA;AAYLC,UAAAA,OAZK;AAaXH,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACMG,UAAAA,WAdK,GAcSD,OAAO,CAACE,KAAR,CAAc,gBAAd,EAAgC,CAAhC,EAAmCA,KAAnC,CAAyC,YAAzC,EAAuD,CAAvD,CAdT;AAeXL,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BG,WAA9B;AAfW,2CAgBJA,WAhBI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import fetch from \"node-fetch\";\r\n\r\nexport default async function GetTrueVideoSource(videoUrl){\r\n\r\n    //fetch video page\r\n    var requestOptions = {\r\n        method: 'GET',\r\n        redirect: 'follow'\r\n    };\r\n\r\n\r\n\r\n    const res = await fetch(videoUrl, requestOptions);\r\n    console.log('fetching')\r\n    const resText = await res.text();\r\n    console.log('fetching')\r\n    const videoSource = resText.split(\"video:[{url:\\\"\")[1].split(\"\\\",start:0\")[0];\r\n    console.log(\"second source: \",videoSource);\r\n    return videoSource\r\n}"]},"metadata":{},"sourceType":"module"}