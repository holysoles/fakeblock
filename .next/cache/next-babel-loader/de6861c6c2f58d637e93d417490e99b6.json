{"ast":null,"code":"import React from \"react\";\nimport fetch from \"node-fetch\";\nimport { Headers } from \"node-fetch\";\nimport GetFBID from \"../GetFBID\";\nimport GetTrueVideoSource from \"./GetTrueVideoSource\";\nexport default async function GetPhotos(page) {\n  const jsdom = require(\"jsdom\");\n\n  const {\n    JSDOM\n  } = jsdom;\n  const dom = new JSDOM();\n  const document = dom.window.document;\n  let postsArray = [];\n  const fbID = await GetFBID(page); //timeline cursor appears to set where posts get request starts from\n\n  const headers = new Headers({\n    'User-Agent': \"PostmanRuntime/7.24.1\"\n  });\n  const opts = {\n    method: 'GET',\n    headers: headers,\n    redirect: 'follow'\n  };\n  const fullUrl = 'https://www.facebook/com/' + fbID + '/photos';\n  const res = await fetch(fullUrl, opts);\n\n  if (res.ok) {\n    console.log(\"response okay\");\n    console.log(res.text()); //need to get html updates from json response\n\n    const resText = await res.text();\n    const rawJson = resText.replace(\"for (;;);\", \"\");\n    const postsJson = JSON.parse(rawJson);\n    const rawHtml = postsJson.domops[0][3].__html; //construct doc from raw html string and get post wrapper elements into html collection\n\n    const postsDoc = document.createElement('html');\n    postsDoc.innerHTML = rawHtml;\n    return postsArray;\n  } else {\n    console.log(\"response failed\");\n    return [];\n  }\n}","map":{"version":3,"sources":["C:/Users/Patrick/PhpstormProjects/fakeblock/components/Photos/GetPhotos.js"],"names":["React","fetch","Headers","GetFBID","GetTrueVideoSource","GetPhotos","page","jsdom","require","JSDOM","dom","document","window","postsArray","fbID","headers","opts","method","redirect","fullUrl","res","ok","console","log","text","resText","rawJson","replace","postsJson","JSON","parse","rawHtml","domops","__html","postsDoc","createElement","innerHTML"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAAQC,OAAR,QAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AAEA,eAAe,eAAeC,SAAf,CAAyBC,IAAzB,EAA+B;AAC1C,QAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,QAAM;AAACC,IAAAA;AAAD,MAAUF,KAAhB;AACA,QAAMG,GAAG,GAAG,IAAID,KAAJ,EAAZ;AACA,QAAME,QAAQ,GAAGD,GAAG,CAACE,MAAJ,CAAWD,QAA5B;AACA,MAAIE,UAAU,GAAG,EAAjB;AAEA,QAAMC,IAAI,GAAG,MAAMX,OAAO,CAACG,IAAD,CAA1B,CAP0C,CAQ1C;;AACA,QAAMS,OAAO,GAAG,IAAIb,OAAJ,CAAY;AAAC,kBAAc;AAAf,GAAZ,CAAhB;AACA,QAAMc,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAE,KADC;AAETF,IAAAA,OAAO,EAAEA,OAFA;AAGTG,IAAAA,QAAQ,EAAE;AAHD,GAAb;AAKA,QAAMC,OAAO,GAAG,8BAA6BL,IAA7B,GAAmC,SAAnD;AAEA,QAAMM,GAAG,GAAG,MAAMnB,KAAK,CAACkB,OAAD,EAAUH,IAAV,CAAvB;;AACA,MAAII,GAAG,CAACC,EAAR,EAAY;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAJ,EAAZ,EAFQ,CAGR;;AACA,UAAMC,OAAO,GAAG,MAAML,GAAG,CAACI,IAAJ,EAAtB;AACA,UAAME,OAAO,GAAGD,OAAO,CAACE,OAAR,CAAgB,WAAhB,EAA6B,EAA7B,CAAhB;AACA,UAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAAlB;AACA,UAAMK,OAAO,GAAGH,SAAS,CAACI,MAAV,CAAiB,CAAjB,EAAoB,CAApB,EAAuBC,MAAvC,CAPQ,CAQR;;AACA,UAAMC,QAAQ,GAAGvB,QAAQ,CAACwB,aAAT,CAAuB,MAAvB,CAAjB;AACAD,IAAAA,QAAQ,CAACE,SAAT,GAAqBL,OAArB;AAQA,WAAOlB,UAAP;AACH,GAnBD,MAmBO;AACHS,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,WAAO,EAAP;AACH;AACJ","sourcesContent":["import React from \"react\";\r\nimport fetch from \"node-fetch\"\r\nimport {Headers} from \"node-fetch\";\r\nimport GetFBID from \"../GetFBID\";\r\nimport GetTrueVideoSource from \"./GetTrueVideoSource\";\r\n\r\nexport default async function GetPhotos(page) {\r\n    const jsdom = require(\"jsdom\");\r\n    const {JSDOM} = jsdom;\r\n    const dom = new JSDOM();\r\n    const document = dom.window.document;\r\n    let postsArray = [];\r\n\r\n    const fbID = await GetFBID(page);\r\n    //timeline cursor appears to set where posts get request starts from\r\n    const headers = new Headers({'User-Agent': \"PostmanRuntime/7.24.1\"});\r\n    const opts = {\r\n        method: 'GET',\r\n        headers: headers,\r\n        redirect: 'follow',\r\n    };\r\n    const fullUrl = 'https://www.facebook/com/'+ fbID +'/photos'\r\n\r\n    const res = await fetch(fullUrl, opts);\r\n    if (res.ok) {\r\n        console.log(\"response okay\");\r\n        console.log(res.text())\r\n        //need to get html updates from json response\r\n        const resText = await res.text();\r\n        const rawJson = resText.replace(\"for (;;);\", \"\");\r\n        const postsJson = JSON.parse(rawJson);\r\n        const rawHtml = postsJson.domops[0][3].__html;\r\n        //construct doc from raw html string and get post wrapper elements into html collection\r\n        const postsDoc = document.createElement('html');\r\n        postsDoc.innerHTML = rawHtml;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        return postsArray\r\n    } else {\r\n        console.log(\"response failed\");\r\n        return []\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}