{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Patrick\\\\PhpstormProjects\\\\fakeblock\\\\pages\\\\search\\\\[pagesearch].js\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport Header from \"../../components/Header\";\nimport React from \"react\";\nimport axios from 'axios';\nexport async function getServerSideProps(context) {\n  const query = context.params.pagesearch; //api key for google search\n\n  const apiKey = 'AIzaSyDPDWPBR6U4jktm6-Mf48I3B4MBPGrE-oo';\n  const searchUrl = 'https://www.googleapis.com/customsearch/v1?key=' + apiKey + '&cx=009314889963947572451' + ':y8n4xwymi73&q=' + query;\n  const response = await axios.get(searchUrl);\n  const searchResults = response.data.items;\n  let results = [];\n\n  for (const result of searchResults) {\n    let title = result.title;\n    let link = result.link;\n    results.push({\n      title: title,\n      link: link\n    });\n  }\n\n  return {\n    props: {\n      results\n    }\n  };\n}\n\nconst Page = ({\n  results\n}) => {\n  const router = useRouter(); //iterate through array of result objects to make list\n\n  const resultsList = results.map(result => {\n    return __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      href: result.link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, result.title));\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Business Search results for: \", __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 53\n    }\n  }, router.query.pagesearch))), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, resultsList)));\n};\n\nexport default Page;","map":{"version":3,"sources":["C:/Users/Patrick/PhpstormProjects/fakeblock/pages/search/[pagesearch].js"],"names":["useRouter","Header","React","axios","getServerSideProps","context","query","params","pagesearch","apiKey","searchUrl","response","get","searchResults","data","items","results","result","title","link","push","props","Page","router","resultsList","map"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA0C;AAC7C,QAAMC,KAAK,GAAGD,OAAO,CAACE,MAAR,CAAeC,UAA7B,CAD6C,CAE7C;;AACA,QAAMC,MAAM,GAAG,yCAAf;AACA,QAAMC,SAAS,GAAG,oDAAmDD,MAAnD,GAA2D,2BAA3D,GACd,iBADc,GACMH,KADxB;AAEA,QAAMK,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUF,SAAV,CAAvB;AACA,QAAMG,aAAa,GAAGF,QAAQ,CAACG,IAAT,CAAcC,KAApC;AACA,MAAIC,OAAO,GAAG,EAAd;;AACA,OAAI,MAAMC,MAAV,IAAoBJ,aAApB,EAAkC;AAC9B,QAAIK,KAAK,GAAGD,MAAM,CAACC,KAAnB;AACA,QAAIC,IAAI,GAAGF,MAAM,CAACE,IAAlB;AACAH,IAAAA,OAAO,CAACI,IAAR,CAAa;AAACF,MAAAA,KAAK,EAAEA,KAAR;AAAeC,MAAAA,IAAI,EAAEA;AAArB,KAAb;AACH;;AACD,SAAM;AAACE,IAAAA,KAAK,EAAE;AAACL,MAAAA;AAAD;AAAR,GAAN;AAEH;;AAED,MAAMM,IAAI,GAAG,CAAC;AAACN,EAAAA;AAAD,CAAD,KAAe;AACxB,QAAMO,MAAM,GAAGvB,SAAS,EAAxB,CADwB,CAGxB;;AACA,QAAMwB,WAAW,GAAGR,OAAO,CAACS,GAAR,CAAaR,MAAD,IAAY;AACxC,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,IAAI,EAAEA,MAAM,CAACE,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBF,MAAM,CAACC,KAA9B,CADJ,CADJ;AAKH,GANmB,CAApB;AAQA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIK,MAAM,CAACjB,KAAP,CAAaE,UAAjB,CAAhC,CADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKgB,WADL,CAJJ,CAFJ,CADJ;AAaH,CAzBD;;AA2BA,eAAeF,IAAf","sourcesContent":["import {useRouter} from \"next/router\";\r\nimport Header from \"../../components/Header\";\r\nimport React from \"react\";\r\nimport axios from 'axios'\r\n\r\nexport async function getServerSideProps(context){\r\n    const query = context.params.pagesearch;\r\n    //api key for google search\r\n    const apiKey = 'AIzaSyDPDWPBR6U4jktm6-Mf48I3B4MBPGrE-oo'\r\n    const searchUrl = 'https://www.googleapis.com/customsearch/v1?key='+ apiKey +'&cx=009314889963947572451' +\r\n        ':y8n4xwymi73&q=' + query;\r\n    const response = await axios.get(searchUrl);\r\n    const searchResults = response.data.items;\r\n    let results = [];\r\n    for(const result of searchResults){\r\n        let title = result.title;\r\n        let link = result.link;\r\n        results.push({title: title, link: link});\r\n    }\r\n    return{props: {results}}\r\n\r\n}\r\n\r\nconst Page = ({results}) => {\r\n    const router = useRouter();\r\n\r\n    //iterate through array of result objects to make list\r\n    const resultsList = results.map((result) => {\r\n        return(\r\n            <li>\r\n                <a href={result.link}>{result.title}</a>\r\n            </li>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div>\r\n                <div>\r\n                    <p>Business Search results for: <a>{router.query.pagesearch}</a></p>\r\n                </div>\r\n                <ul>\r\n                    {resultsList}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Page;"]},"metadata":{},"sourceType":"module"}