{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Header from \"../../components/Header\";\nimport axios from 'axios';\nimport GetFBID from \"../../components/GetFBID\";\nexport async function getServerSideProps(context) {\n  //setup query\n  let query = context.params.search;\n\n  if (query === undefined) {\n    return;\n  } //make and await axios request on public search page\n\n\n  console.log(\"searchquery: \", query);\n  const searchUrl = 'https://www.facebook.com/public/' + query;\n  let res = await axios.get(searchUrl);\n  let htmlText = await res.data; //Need parser import for server side rendering\n\n  var DomParser = require('dom-parser');\n\n  var parser = new DomParser();\n  var dom = parser.parseFromString(htmlText);\n\n  if (dom !== null) {\n    //Results list is hidden element on Dom as string (lazy loading?) need to parse\n    var hiddenElements = dom.getElementsByClassName('hidden_elem');\n    var listText1 = hiddenElements[1].childNodes[0].childNodes[1].innerHTML;\n    var listText2 = hiddenElements[4].childNodes[0].childNodes[1].innerHTML;\n    var resultsContainer1 = parser.parseFromString(listText1);\n    var resultsContainer2 = parser.parseFromString(listText2);\n    let resultsArray1 = resultsContainer1.getElementsByClassName(\"_4bl7 _3-90\");\n    let resultsArray2 = resultsContainer2.getElementsByClassName(\"_4bl7 _3-90\");\n    let resultsArray = resultsArray1.concat(resultsArray2);\n    let results = [];\n    let profilepic;\n\n    for (const result of resultsArray) {\n      let name = result.childNodes[0].attributes[0].value;\n      let link = result.childNodes[0].attributes[6].value; //check if fbid is in link before making request\n\n      let haveId = false;\n      let facebookId = '';\n      let profileUrl = link.replace('https://www.facebook.com/', '');\n\n      if (profileUrl.includes(\"people\")) {\n        facebookId = profileUrl.split('/')[2];\n        haveId = true;\n      } //Since no id, make get request to get facebook id from profile page\n\n\n      if (!haveId) {\n        facebookId = await GetFBID(link);\n      }\n\n      results.push({\n        name: name,\n        link: link,\n        id: facebookId\n      }); //save image from fb url\n\n      if (haveId) {\n        let picUrl = 'http://graph.facebook.com/' + facebookId + '/picture?type=square';\n        console.log(picUrl); //profilepic = await fetch(picUrl);\n        //console.log(profilepic)\n      }\n    }\n\n    return {\n      props: {\n        results\n      }\n    };\n  }\n}\n\nconst Page = ({\n  results\n}) => {\n  const router = useRouter(); //iterate through array of result objects to make list\n\n  const resultsList = results.map(result => {\n    let resultName = result.name;\n    let resultLink = result.link;\n    let resultId = result.id; //if resultID === '' then no profile pic available due to rate limiting\n    //let resultImage = \"/imgs/\"+ resultId +\".jpg\";\n\n    let resultImage = '';\n\n    if (resultId !== '') {\n      resultImage = 'http://graph.facebook.com/' + resultId + '/picture?type=square';\n    }\n\n    return __jsx(\"li\", {\n      key: resultLink\n    }, __jsx(\"img\", {\n      src: resultImage,\n      width: \"72\",\n      height: \"72\"\n    }), __jsx(\"a\", {\n      href: resultLink\n    }, resultName));\n  });\n  return __jsx(\"div\", null, __jsx(Header, null), __jsx(\"div\", null, __jsx(\"div\", null, __jsx(\"p\", null, \"Search results for: \", __jsx(\"a\", null, router.query.search))), __jsx(\"ul\", null, resultsList)));\n};\n\nexport default Page;","map":null,"metadata":{},"sourceType":"module"}